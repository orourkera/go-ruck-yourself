// Autogenerated from Pigeon (v25.3.1), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN


/// The codec used by all APIs.
NSObject<FlutterMessageCodec> *nullGetRuckingApiCodec(void);

/// Messages from native (Watch) to Flutter
@interface RuckingApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger messageChannelSuffix:(nullable NSString *)messageChannelSuffix;
/// Start a new session from the watch
- (void)startSessionFromWatchRuckWeight:(double)ruckWeight completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Start a session on the watch (Flutter -> native)
- (void)startSessionOnWatchRuckWeight:(double)ruckWeight completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Update session metrics on the watch (Flutter -> native)
- (void)updateSessionOnWatchDistance:(double)distance duration:(double)duration pace:(double)pace isPaused:(BOOL)isPaused completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Pause an active session from the watch
- (void)pauseSessionFromWatchWithCompletion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Resume a paused session from the watch
- (void)resumeSessionFromWatchWithCompletion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// End the current session from the watch
- (void)endSessionFromWatchDuration:(NSInteger)duration distance:(double)distance calories:(double)calories completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Update heart rate from the watch
- (void)updateHeartRateFromWatchHeartRate:(double)heartRate completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
@end


/// Messages from Flutter to native (Watch)
@protocol FlutterRuckingApi
/// Update session metrics on the watch
- (void)updateSessionOnWatchDistance:(double)distance duration:(double)duration pace:(double)pace isPaused:(BOOL)isPaused error:(FlutterError *_Nullable *_Nonnull)error;
/// Start a session on the watch
- (void)startSessionOnWatchRuckWeight:(double)ruckWeight error:(FlutterError *_Nullable *_Nonnull)error;
/// Pause a session on the watch
- (void)pauseSessionOnWatchWithError:(FlutterError *_Nullable *_Nonnull)error;
/// Resume a session on the watch
- (void)resumeSessionOnWatchWithError:(FlutterError *_Nullable *_Nonnull)error;
/// End a session on the watch
- (void)endSessionOnWatchWithError:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void SetUpFlutterRuckingApi(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FlutterRuckingApi> *_Nullable api);

extern void SetUpFlutterRuckingApiWithSuffix(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FlutterRuckingApi> *_Nullable api, NSString *messageChannelSuffix);

NS_ASSUME_NONNULL_END
