// Mocks generated by Mockito 5.4.6 from annotations
// in rucking_app/test/features/ruck_session/presentation/bloc/managers/session_lifecycle_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:io' as _i9;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:rucking_app/core/models/user.dart' as _i3;
import 'package:rucking_app/core/services/api_client.dart' as _i14;
import 'package:rucking_app/core/services/auth_service.dart' as _i11;
import 'package:rucking_app/core/services/storage_service.dart' as _i13;
import 'package:rucking_app/core/services/watch_service.dart' as _i12;
import 'package:rucking_app/features/ruck_buddies/domain/entities/user_info.dart'
    as _i4;
import 'package:rucking_app/features/ruck_session/data/repositories/session_repository.dart'
    as _i5;
import 'package:rucking_app/features/ruck_session/domain/models/heart_rate_sample.dart'
    as _i7;
import 'package:rucking_app/features/ruck_session/domain/models/ruck_photo.dart'
    as _i8;
import 'package:rucking_app/features/ruck_session/domain/models/ruck_session.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRuckSession_0 extends _i1.SmartFake implements _i2.RuckSession {
  _FakeRuckSession_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserInfo_2 extends _i1.SmartFake implements _i4.UserInfo {
  _FakeUserInfo_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SessionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessionRepository extends _i1.Mock implements _i5.SessionRepository {
  MockSessionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i7.HeartRateSample>> fetchHeartRateSamples(
          String? sessionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchHeartRateSamples,
          [sessionId],
        ),
        returnValue: _i6.Future<List<_i7.HeartRateSample>>.value(
            <_i7.HeartRateSample>[]),
      ) as _i6.Future<List<_i7.HeartRateSample>>);

  @override
  _i6.Future<_i2.RuckSession?> fetchSessionById(
    String? sessionId, {
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSessionById,
          [sessionId],
          {#forceRefresh: forceRefresh},
        ),
        returnValue: _i6.Future<_i2.RuckSession?>.value(),
      ) as _i6.Future<_i2.RuckSession?>);

  @override
  _i6.Future<bool> deleteSession(String? sessionId) => (super.noSuchMethod(
        Invocation.method(
          #deleteSession,
          [sessionId],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i2.RuckSession> updateSession(_i2.RuckSession? updatedSession) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSession,
          [updatedSession],
        ),
        returnValue: _i6.Future<_i2.RuckSession>.value(_FakeRuckSession_0(
          this,
          Invocation.method(
            #updateSession,
            [updatedSession],
          ),
        )),
      ) as _i6.Future<_i2.RuckSession>);

  @override
  _i6.Future<List<_i8.RuckPhoto>> uploadSessionPhotos(
    String? ruckId,
    List<_i9.File>? photos,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadSessionPhotos,
          [
            ruckId,
            photos,
          ],
        ),
        returnValue: _i6.Future<List<_i8.RuckPhoto>>.value(<_i8.RuckPhoto>[]),
      ) as _i6.Future<List<_i8.RuckPhoto>>);

  @override
  _i6.Future<List<_i8.RuckPhoto>> uploadSessionPhotosOptimized(
    String? ruckId,
    List<_i9.File>? photos,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadSessionPhotosOptimized,
          [
            ruckId,
            photos,
          ],
        ),
        returnValue: _i6.Future<List<_i8.RuckPhoto>>.value(<_i8.RuckPhoto>[]),
      ) as _i6.Future<List<_i8.RuckPhoto>>);

  @override
  void uploadSessionPhotosInBackground(
    String? ruckId,
    List<_i9.File>? photoFiles,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #uploadSessionPhotosInBackground,
          [
            ruckId,
            photoFiles,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<List<_i8.RuckPhoto>> getSessionPhotos(String? ruckId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSessionPhotos,
          [ruckId],
        ),
        returnValue: _i6.Future<List<_i8.RuckPhoto>>.value(<_i8.RuckPhoto>[]),
      ) as _i6.Future<List<_i8.RuckPhoto>>);

  @override
  _i6.Future<String?> getCurrentUserId() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserId,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  void clearUserIdCache() => super.noSuchMethod(
        Invocation.method(
          #clearUserIdCache,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<bool> deletePhoto(_i8.RuckPhoto? photo) => (super.noSuchMethod(
        Invocation.method(
          #deletePhoto,
          [photo],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<List<_i2.RuckSession>> fetchSessionHistory({
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSessionHistory,
          [],
          {
            #startDate: startDate,
            #endDate: endDate,
          },
        ),
        returnValue:
            _i6.Future<List<_i2.RuckSession>>.value(<_i2.RuckSession>[]),
      ) as _i6.Future<List<_i2.RuckSession>>);

  @override
  _i6.Future<String> createManualSession(Map<String, dynamic>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #createManualSession,
          [data],
        ),
        returnValue: _i6.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #createManualSession,
            [data],
          ),
        )),
      ) as _i6.Future<String>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i11.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.User> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue: _i6.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #signIn,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.User> register({
    required String? username,
    required String? email,
    required String? password,
    bool? preferMetric,
    double? weightKg,
    double? heightCm,
    String? dateOfBirth,
    String? gender,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #username: username,
            #email: email,
            #password: password,
            #preferMetric: preferMetric,
            #weightKg: weightKg,
            #heightCm: heightCm,
            #dateOfBirth: dateOfBirth,
            #gender: gender,
          },
        ),
        returnValue: _i6.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #register,
            [],
            {
              #username: username,
              #email: email,
              #password: password,
              #preferMetric: preferMetric,
              #weightKg: weightKg,
              #heightCm: heightCm,
              #dateOfBirth: dateOfBirth,
              #gender: gender,
            },
          ),
        )),
      ) as _i6.Future<_i3.User>);

  @override
  _i6.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.User?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i6.Future<_i3.User?>.value(),
      ) as _i6.Future<_i3.User?>);

  @override
  _i6.Future<bool> isAuthenticated() => (super.noSuchMethod(
        Invocation.method(
          #isAuthenticated,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<String?> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<String?> refreshToken() => (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.User> updateProfile({
    String? username,
    double? weightKg,
    double? heightCm,
    bool? preferMetric,
    bool? allowRuckSharing,
    String? gender,
    String? avatarUrl,
    bool? notificationClubs,
    bool? notificationBuddies,
    bool? notificationEvents,
    bool? notificationDuels,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #username: username,
            #weightKg: weightKg,
            #heightCm: heightCm,
            #preferMetric: preferMetric,
            #allowRuckSharing: allowRuckSharing,
            #gender: gender,
            #avatarUrl: avatarUrl,
            #notificationClubs: notificationClubs,
            #notificationBuddies: notificationBuddies,
            #notificationEvents: notificationEvents,
            #notificationDuels: notificationDuels,
          },
        ),
        returnValue: _i6.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #updateProfile,
            [],
            {
              #username: username,
              #weightKg: weightKg,
              #heightCm: heightCm,
              #preferMetric: preferMetric,
              #allowRuckSharing: allowRuckSharing,
              #gender: gender,
              #avatarUrl: avatarUrl,
              #notificationClubs: notificationClubs,
              #notificationBuddies: notificationBuddies,
              #notificationEvents: notificationEvents,
              #notificationDuels: notificationDuels,
            },
          ),
        )),
      ) as _i6.Future<_i3.User>);

  @override
  _i6.Future<void> deleteAccount({required String? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAccount,
          [],
          {#userId: userId},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.User> googleSignIn() => (super.noSuchMethod(
        Invocation.method(
          #googleSignIn,
          [],
        ),
        returnValue: _i6.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #googleSignIn,
            [],
          ),
        )),
      ) as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.User> appleSignIn() => (super.noSuchMethod(
        Invocation.method(
          #appleSignIn,
          [],
        ),
        returnValue: _i6.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #appleSignIn,
            [],
          ),
        )),
      ) as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.User> googleRegister({
    required String? email,
    required String? displayName,
    required String? username,
    required bool? preferMetric,
    double? weightKg,
    double? heightCm,
    String? dateOfBirth,
    String? gender,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #googleRegister,
          [],
          {
            #email: email,
            #displayName: displayName,
            #username: username,
            #preferMetric: preferMetric,
            #weightKg: weightKg,
            #heightCm: heightCm,
            #dateOfBirth: dateOfBirth,
            #gender: gender,
          },
        ),
        returnValue: _i6.Future<_i3.User>.value(_FakeUser_1(
          this,
          Invocation.method(
            #googleRegister,
            [],
            {
              #email: email,
              #displayName: displayName,
              #username: username,
              #preferMetric: preferMetric,
              #weightKg: weightKg,
              #heightCm: heightCm,
              #dateOfBirth: dateOfBirth,
              #gender: gender,
            },
          ),
        )),
      ) as _i6.Future<_i3.User>);

  @override
  _i6.Future<void> requestPasswordReset({required String? email}) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestPasswordReset,
          [],
          {#email: email},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> confirmPasswordReset({
    required String? token,
    required String? newPassword,
    String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmPasswordReset,
          [],
          {
            #token: token,
            #newPassword: newPassword,
            #refreshToken: refreshToken,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [WatchService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchService extends _i1.Mock implements _i12.WatchService {
  MockWatchService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Stream<double> get onHeartRateUpdate => (super.noSuchMethod(
        Invocation.getter(#onHeartRateUpdate),
        returnValue: _i6.Stream<double>.empty(),
      ) as _i6.Stream<double>);

  @override
  _i6.Future<void> startSessionOnWatch(
    double? ruckWeight, {
    bool? isMetric = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startSessionOnWatch,
          [ruckWeight],
          {#isMetric: isMetric},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> sendSessionIdToWatch(String? sessionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSessionIdToWatch,
          [sessionId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> pingWatch() => (super.noSuchMethod(
        Invocation.method(
          #pingWatch,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> sendSplitNotification({
    required double? splitDistance,
    required Duration? splitDuration,
    required double? totalDistance,
    required Duration? totalDuration,
    required bool? isMetric,
    double? splitCalories,
    double? splitElevationGain,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSplitNotification,
          [],
          {
            #splitDistance: splitDistance,
            #splitDuration: splitDuration,
            #totalDistance: totalDistance,
            #totalDuration: totalDuration,
            #isMetric: isMetric,
            #splitCalories: splitCalories,
            #splitElevationGain: splitElevationGain,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> sendSessionStartNotification({
    required double? ruckWeight,
    required bool? isMetric,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendSessionStartNotification,
          [],
          {
            #ruckWeight: ruckWeight,
            #isMetric: isMetric,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> updateMetricsOnWatch({
    required double? distance,
    required Duration? duration,
    required double? pace,
    required bool? isPaused,
    required int? calories,
    required double? elevation,
    double? elevationLoss,
    required bool? isMetric,
    int? steps,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMetricsOnWatch,
          [],
          {
            #distance: distance,
            #duration: duration,
            #pace: pace,
            #isPaused: isPaused,
            #calories: calories,
            #elevation: elevation,
            #elevationLoss: elevationLoss,
            #isMetric: isMetric,
            #steps: steps,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> updateSessionOnWatch({
    required double? distance,
    required Duration? duration,
    required double? pace,
    required bool? isPaused,
    required double? calories,
    required double? elevationGain,
    required double? elevationLoss,
    required bool? isMetric,
    int? steps,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSessionOnWatch,
          [],
          {
            #distance: distance,
            #duration: duration,
            #pace: pace,
            #isPaused: isPaused,
            #calories: calories,
            #elevationGain: elevationGain,
            #elevationLoss: elevationLoss,
            #isMetric: isMetric,
            #steps: steps,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  String twoDigits(int? n) => (super.noSuchMethod(
        Invocation.method(
          #twoDigits,
          [n],
        ),
        returnValue: _i10.dummyValue<String>(
          this,
          Invocation.method(
            #twoDigits,
            [n],
          ),
        ),
      ) as String);

  @override
  _i6.Future<bool> pauseSessionOnWatch() => (super.noSuchMethod(
        Invocation.method(
          #pauseSessionOnWatch,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> resumeSessionOnWatch() => (super.noSuchMethod(
        Invocation.method(
          #resumeSessionOnWatch,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> endSessionOnWatch() => (super.noSuchMethod(
        Invocation.method(
          #endSessionOnWatch,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  void handleWatchHeartRateUpdate(double? heartRate) => super.noSuchMethod(
        Invocation.method(
          #handleWatchHeartRateUpdate,
          [heartRate],
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i7.HeartRateSample> getCurrentSessionHeartRateSamples() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentSessionHeartRateSamples,
          [],
        ),
        returnValue: <_i7.HeartRateSample>[],
      ) as List<_i7.HeartRateSample>);

  @override
  void sessionStartedFromWatchCallback(
    double? ruckWeight,
    dynamic response,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #sessionStartedFromWatchCallback,
          [
            ruckWeight,
            response,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> pauseSessionFromWatchCallback() => (super.noSuchMethod(
        Invocation.method(
          #pauseSessionFromWatchCallback,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> resumeSessionFromWatchCallback() => (super.noSuchMethod(
        Invocation.method(
          #resumeSessionFromWatchCallback,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void endSessionFromWatchCallback(
    int? duration,
    double? distance,
    double? calories,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #endSessionFromWatchCallback,
          [
            duration,
            distance,
            calories,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void restartHeartRateMonitoring() => super.noSuchMethod(
        Invocation.method(
          #restartHeartRateMonitoring,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i13.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<void> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> getBool(
    String? key, {
    bool? defaultValue = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<void> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<int> getInt(
    String? key, {
    int? defaultValue = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _i6.Future<int>.value(0),
      ) as _i6.Future<int>);

  @override
  _i6.Future<void> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<double> getDouble(
    String? key, {
    double? defaultValue = 0.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _i6.Future<double>.value(0.0),
      ) as _i6.Future<double>);

  @override
  _i6.Future<void> setObject(
    String? key,
    Map<String, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setObject,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<Map<String, dynamic>?> getObject(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getObject,
          [key],
        ),
        returnValue: _i6.Future<Map<String, dynamic>?>.value(),
      ) as _i6.Future<Map<String, dynamic>?>);

  @override
  _i6.Future<void> setSecureString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSecureString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<String?> getSecureString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getSecureString,
          [key],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<String?> getAuthToken() => (super.noSuchMethod(
        Invocation.method(
          #getAuthToken,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<bool> hasKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #hasKey,
          [key],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<Set<String>> getAllKeys() => (super.noSuchMethod(
        Invocation.method(
          #getAllKeys,
          [],
        ),
        returnValue: _i6.Future<Set<String>>.value(<String>{}),
      ) as _i6.Future<Set<String>>);

  @override
  _i6.Future<void> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeSecure(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeSecure,
          [key],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i14.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setStorageService(_i13.StorageService? storageService) =>
      super.noSuchMethod(
        Invocation.method(
          #setStorageService,
          [storageService],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<String?> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  _i6.Future<String?> refreshToken() => (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);

  @override
  void setAuthToken(String? token) => super.noSuchMethod(
        Invocation.method(
          #setAuthToken,
          [token],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clearAuthToken() => super.noSuchMethod(
        Invocation.method(
          #clearAuthToken,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<dynamic> get(
    String? endpoint, {
    Map<String, dynamic>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [endpoint],
          {#queryParams: queryParams},
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> post(
    String? endpoint,
    dynamic body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            endpoint,
            body,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> put(
    String? endpoint,
    Map<String, dynamic>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            endpoint,
            body,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> patch(
    String? endpoint,
    Map<String, dynamic>? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [
            endpoint,
            body,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> delete(String? endpoint) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [endpoint],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> addLocationPoint(
    String? ruckId,
    Map<String, dynamic>? locationData,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLocationPoint,
          [
            ruckId,
            locationData,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> addLocationPoints(
    String? ruckId,
    List<Map<String, dynamic>>? locationPoints,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLocationPoints,
          [
            ruckId,
            locationPoints,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<dynamic> addHeartRateSamples(
    String? ruckId,
    List<Map<String, dynamic>>? heartRateSamples,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addHeartRateSamples,
          [
            ruckId,
            heartRateSamples,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<_i4.UserInfo> getCurrentUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserProfile,
          [],
        ),
        returnValue: _i6.Future<_i4.UserInfo>.value(_FakeUserInfo_2(
          this,
          Invocation.method(
            #getCurrentUserProfile,
            [],
          ),
        )),
      ) as _i6.Future<_i4.UserInfo>);

  @override
  _i6.Future<_i4.UserInfo> getUserProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [userId],
        ),
        returnValue: _i6.Future<_i4.UserInfo>.value(_FakeUserInfo_2(
          this,
          Invocation.method(
            #getUserProfile,
            [userId],
          ),
        )),
      ) as _i6.Future<_i4.UserInfo>);

  @override
  void setTokenRefreshCallback(dynamic Function()? callback) =>
      super.noSuchMethod(
        Invocation.method(
          #setTokenRefreshCallback,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<dynamic> postSessionCompletion(
    String? path,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postSessionCompletion,
          [
            path,
            data,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<Map<String, dynamic>> sendTestNotification() =>
      (super.noSuchMethod(
        Invocation.method(
          #sendTestNotification,
          [],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}
